require "rake-pipeline-web-filters"
require 'rake-pipeline-web-filters/filter_with_dependencies'
require "json"
require "less"
require "execjs"
require "uglifier"

require "./app/submodules/yoin-ember/rakep/filters"
require "./app/submodules/yoin-views/rakep/filters"
require "./app/submodules/yoin-views-pos/rakep/filters"

Encoding.default_external = Encoding::UTF_8
Encoding.default_internal = Encoding::UTF_8

is_android = !ENV['ANDROID'].nil? && !ENV['ANDROID'].empty?

output "source/assets2"
input "app/submodules/yoin-views-pos/assets2"  do
	match "**/*" do
    copy
  end
end

output "source/assets"
input "app/submodules/yoin-views/assets"  do
	match "**/*" do
    copy
  end
end

output "source/assets_fx"
input "app/submodules/yoin-views/assets_fx"  do
	match "**/*" do
    copy
  end
end



output "tmp/source"
input "."  do

	match "app/submodules/yoin-views-pos/less/views/**/*.less" do
		filter Yoin::LessFilter, :is_android => is_android
		concat "projecttmp.css"
	end

  if is_android 
    match "app/submodules/yoin-views/less/query/android/**/*.less" do
      filter Yoin::LessFilter, :is_android => is_android
      concat "projecttmp.css"
    end
  end

	match "app/submodules/yoin-views/less/query/tablet/**/*.less" do
    filter Yoin::LessFilter, :is_android => is_android
		concat "projecttmp.css"
	end

	match "app/submodules/yoin-views/less/query/mobile/**/*.less" do
    filter Yoin::LessFilter, :is_android => is_android
		concat "projecttmp.css"
	end

	match "app/submodules/yoin-views/less/views/**/*.less" do
    filter Yoin::LessFilter, :is_android => is_android
		concat "projecttmp.css"
	end


	match "app/submodules/yoin-views/reset/normalize.css" do
		concat "projecttmp.css"
	end

end

input "app"  do


	match "submodules/yoin-views-pos/templates/**/*.handlebars" do
		filter Yoin::HandlebarsPrecompiler
		concat "apptmp.js"
	end



	match "submodules/yoin-views/templates/**/*.handlebars" do
		filter Yoin::HandlebarsPrecompiler
		concat "apptmp.js"
		filter Yoin::AddHandlebarsDependencies
	end


	match "app/lib/**/*.js" do
		minispade :rewrite_requires => true, :string=> false, :module_id_generator => proc { |input|
			id = input.path.dup
			id.sub!('/lib/', '/')
			id.sub!(/\.js$/, '')
			id.sub!(/\/main$/, '')
			id
		}

		concat "apptmp.js"
	end

  if is_android
    match "submodules/yoin-views/lib-android/**/*.js" do
      minispade :rewrite_requires => true, :string=> false, :module_id_generator => proc { |input|
        id = input.path.dup
        id.sub!('submodules/', '')
        id.sub!(/\.js$/, '')
        id.sub!(/\/main$/, '')
        id
      }
     concat "apptmp.js"
    end
	end

	match "submodules/{yoin-ember}/fixtures/**/*.js" do
		minispade :rewrite_requires => true, :string=> false, :module_id_generator => proc { |input|
			id = input.path.dup
			id.sub!('submodules/', '')
			id.sub!(/\.js$/, '')
			id
		}

	 concat "apptmp.js"
	end


	match "submodules/{yoin-ember,yoin-views,yoin-views-pos}/lib/**/*.js" do
		minispade :rewrite_requires => true, :string=> false, :module_id_generator => proc { |input|
			id = input.path.dup
			id.sub!('submodules/', '')
			id.sub!('/lib/', '/')
			id.sub!(/\.js$/, '')
			id.sub!(/\/main$/, '')
			id
		}

	  concat "apptmp.js"
	end


	match "submodules/*/packages/{ember-data,ember-application,ember-routing,ember-debug,ember-metal,ember-runtime,ember-states,ember-views,rsvp,container,metamorph,ember-handlebars,ember-handlebars-compiler,ember-touch}/lib/**/.js" do
		minispade :rewrite_requires => true, :string=> false, :module_id_generator => proc { |input|
			id = input.path.dup
			id.sub!('submodules/', '')
			id.sub!(/[a-z\-\.]+\//, '')
			id.sub!('packages/', '')
			id.sub!('/lib/', '/')
			id.sub!(/\.js$/, '')
			id.sub!(/\/main$/, '')
			id
		}

	 concat "apptmp.js"
   filter Yoin::FixEmberViews
   filter Yoin::AddMicroLoader, :global => true
	end

	match "submodules/yoin-views/vendor/*.js" do
		concat "apptmp.js"
	end

	match "submodules/yoin-ember/vendor/*.js" do
		concat "apptmp.js"
	end

end


production = !ENV['YOIN_PROD'].nil? && !ENV['YOIN_PROD'].empty?

output "source"
input "tmp/source"  do

	match "apptmp.js" do

    if production
      filter Yoin::EmberProductionFilter
      uglify( {:copyright => false} )
    end

		concat "app.js"

	end

	match "projecttmp.css" do

		concat "project.css"

	end

end
# vim: filetype=ruby
